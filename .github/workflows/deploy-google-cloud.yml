name: Deploy to Google Cloud

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [ closed ]
    branches: [ master, main ]

jobs:
  deploy:
    # S√≥ executa se for push direto na master ou PR fechado e merged
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: |
        # Para React Native/Expo, vamos fazer build para web
        npx expo export --platform web
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Deploy to Google Cloud Storage
      run: |
        # Debug: verificar vari√°veis
        echo "GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}"
        echo "GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}"
        
        # Usar bucket fixo para teste
        BUCKET_NAME="gestao-pessoas-app-bucket"
        
        # Criar bucket se n√£o existir (usando projeto correto)
        gsutil mb -p airy-signer-240014 gs://$BUCKET_NAME || true
        
        # Fazer upload dos arquivos
        gsutil -m cp -r dist/* gs://$BUCKET_NAME/
        
        # Configurar bucket para servir site est√°tico
        gsutil web set -m index.html -e 404.html gs://$BUCKET_NAME
        
        # CORS ser√° configurado manualmente se necess√°rio
        echo "Deploy conclu√≠do! CORS pode ser configurado manualmente no console do Google Cloud."
        
    - name: Deploy to Google Cloud Run (Alternativa)
      if: false  # Desabilitado por padr√£o, habilite se preferir Cloud Run
      run: |
        # Build da imagem Docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/gestao-pessoas-app:${{ github.sha }} .
        
        # Push da imagem
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/gestao-pessoas-app:${{ github.sha }}
        
        # Deploy no Cloud Run
        gcloud run deploy gestao-pessoas-app \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/gestao-pessoas-app:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated
          
    - name: Deploy to Firebase Hosting (Alternativa)
      if: false  # Desabilitado por padr√£o, habilite se preferir Firebase
      run: |
        # Instalar Firebase CLI
        npm install -g firebase-tools
        
        # Fazer login
        echo '${{ secrets.FIREBASE_TOKEN }}' | firebase login:ci
        
        # Deploy
        firebase deploy --project ${{ secrets.FIREBASE_PROJECT_ID }} --only hosting
        
    - name: Notify deployment success
      run: |
        echo "‚úÖ Deploy realizado com sucesso!"
        echo "üåê URL: https://storage.googleapis.com/${{ secrets.GCP_BUCKET_NAME }}/index.html"
        echo "üì¶ Commit: ${{ github.sha }}"
        echo "üë§ Autor: ${{ github.actor }}"
